syntax = "proto3";

option go_package = "github.com/AyanokojiKiyotaka8/E-Commerce/product_service/proto";

import "google/api/annotations.proto";

message ProductDetails {
  string name = 1;
  string description = 2;
  double price = 3;
}

message Product {
  string id = 1;
  ProductDetails details = 2;
}

message GetProductReq { string id = 1; }

message GetProductResp { Product product = 1; }

message GetProductsReq {
  double min_price = 1;
  double max_price = 2;
  int64 page = 3;
  int64 limit = 4;
}

message GetProductsResp {
  repeated Product products = 1;
  int64 count = 2;
  int64 page = 3;
  int64 limit = 4;
}

message CreateProductReq { ProductDetails details = 1; }

message CreateProductResp { Product product = 1; }

message UpdateProductReq {
  string id = 1;
  ProductDetails details = 2;
}

message UpdateProductResp { Product product = 1; }

message DeleteProductReq { string id = 1; }

message DeleteProductResp {}

service ProductService {
  rpc GetProduct(GetProductReq) returns (GetProductResp) {
    option (google.api.http) = {
      get : "/v1/product/{id}"
    };
  }

  rpc GetProducts(GetProductsReq) returns (GetProductsResp) {
    option (google.api.http) = {
      get : "/v1/product"
    };
  }

  rpc CreateProduct(CreateProductReq) returns (CreateProductResp) {
    option (google.api.http) = {
      post : "/v1/product"
      body : "details"
    };
  }

  rpc UpdateProduct(UpdateProductReq) returns (UpdateProductResp) {
    option (google.api.http) = {
      put : "/v1/product/{id}"
      body : "details"
    };
  }

  rpc DeleteProduct(DeleteProductReq) returns (DeleteProductResp) {
    option (google.api.http) = {
      delete : "/v1/product/{id}"
    };
  }
}